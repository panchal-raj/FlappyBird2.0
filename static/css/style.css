* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
}

body {
    background-color: #70c5ce;
    overflow: hidden;
}

.game-container {
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
}

.screen {
    width: 100%;
    max-width: 500px;
    background-color: rgba(255, 255, 255, 0.9); /* White box background */
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
    display: none; /* Default state */
    text-align: center;
    z-index: 10; /* Standard layer for menus */
    position: absolute; /* Position screens relative to their container */
    top: 50%; /* Center them vertically */
    left: 50%; /* Center them horizontally */
    transform: translate(-50%, -50%); /* Adjust for the element's own size */
    flex-direction: column; /* Stack flex items vertically */
    align-items: center; /* Center flex items horizontally (in a column) */
    justify-content: center; /* Center flex items vertically (if space allows) */
}

.screen.active {
    display: block;
}

h1, h2, h3 {
    color: #333;
    margin-bottom: 20px;
}

.player-info {
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.menu-buttons {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 20px;
}

button {
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    background-color: #4CAF50;
    color: white;
    cursor: pointer;
    font-size: 16px;
    transition: all 0.3s;
}

button:hover {
    background-color: #45a049;
    transform: scale(1.05);
}

.settings {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.setting-group {
    margin-bottom: 10px;
}

.option-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
}

.option-buttons button {
    background-color: #ddd;
    color: #333;
    flex: 1 0 auto;
    min-width: 80px;
}

.option-buttons button.selected {
    background-color: #4CAF50;
    color: white;
}

#pause-screen {
    /* If you added specific styles here before for the blue overlay, REMOVE them. */
    /* It should primarily rely on the .screen class. */
    /* Ensure it inherits or has z-index 10 from .screen */
    z-index: 10; /* Explicitly set or confirm z-index */
    /* Ensure display is handled by showScreen() */
    /* display: none; */
}

#game-screen {
    position: relative; /* Keep relative positioning */
    padding: 0;
    width: 100%;
    height: 100vh;
    max-width: none; /* Override .screen max-width */
    overflow: hidden;
    z-index: 5; /* Ensure game screen is BELOW standard screens (z-index 10) */
}

#game-canvas {
    width: 100%;
    height: 100%;
    display: block;
}

#score-display {
    position: absolute;
    top: 20px;
    left: 0;
    right: 0;
    text-align: center;
    color: white;
    font-size: 32px;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    background-color: transparent;
    z-index: 6;
}

#pause-btn {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 110;
    padding: 8px;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: auto;
}

#pause-btn:hover {
    background-color: rgba(255, 255, 255, 0.9);
}

#lives-display {
    position: absolute;
    top: 20px;
    left: 20px;
    display: flex;
    align-items: center;
    gap: 5px;
    z-index: 6;
}

#lives-count {
    font-size: 24px;
    font-weight: bold;
    color: white;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

#heart-icon {
    width: 32px;
    height: 32px;
    display: block;
    filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.5));
}

/* Video container for calibration */
#video-container {
    position: relative;
    width: 100%;
    max-width: 400px;
    height: 300px;
    margin: 0 auto 20px;
    border-radius: 8px;
    overflow: hidden;
}

#webcam, #face-canvas {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

#calibration-message {
    font-size: 20px;
    margin-bottom: 15px;
    color: #333;
    font-weight: bold;
}

#calibration-progress {
    width: 100%;
    height: 20px;
    background-color: #eee;
    border-radius: 10px;
    margin: 20px 0;
    overflow: hidden;
}

#progress-bar {
    height: 100%;
    width: 0;
    background-color: #4CAF50;
    transition: width 0.3s;
}

/* Webcam floating container for smile detection during game */
#webcam-floating-container {
    border: 2px solid white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    z-index: 100;
}

#webcam-preview {
    object-fit: cover;
}

/* Controls container for input selection */
#controls-container {
    margin-top: 20px;
    padding: 15px;
    background-color: #f5f5f5;
    border-radius: 8px;
}

/* Game mode-specific styles */
.balloon {
    position: absolute;
    width: 40px;
    height: 60px;
    background-size: contain;
    background-repeat: no-repeat;
}

.star {
    position: absolute;
    background-size: contain;
    background-repeat: no-repeat;
}

#webcam-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

#webcam {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transform: scaleX(-1); /* Mirror image for more intuitive control */
}

#calibration-screen {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.2); /* Slightly more transparent overlay */
    display: flex; /* For centering calibration-ui-elements */
    align-items: center;
    justify-content: center;
    z-index: 100; /* Above game canvas, below other full modals if any */
    pointer-events: auto; /* Allow clicks on its children like the button */
}

.calibration-instructions {
    position: absolute;
    top: 50%; /* Center vertically */
    left: 50%;
    transform: translate(-50%, -50%);
    color: yellow; /* Or your desired color */
    text-align: center;
    font-size: 20px; /* Or your desired font size */
    font-weight: bold; /* Or your desired font weight */
    z-index: 101; /* Ensure it's above the background but below buttons/intensity value if needed */
    width: 90%; /* Ensure text wraps if too long */
}

.calibration-instructions p {
    margin-bottom: 80px; /* Space between instruction lines */
}


.smile-value-display {
    position: absolute;
    top: 100px; /* Adjust this value to position it above instructions */
    left: 50%;
    transform: translateX(-50%);
    color: red;
    font-size: 24px;
    font-weight: bold;
    z-index: 103; /* Ensure it's above the overlay and button */
}

#exit-calibration-btn.calibration-exit-button-overlay { /* Using class for consistency or just ID */
    position: absolute;
    top: 20px; /* Adjust as needed */
    right: 20px; /* Adjust as needed */
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    background-color: #4CAF50; /* Green */
    color: white;
    cursor: pointer;
    font-size: 16px;
    z-index: 102; /* Above the subtle overlay */
    pointer-events: auto; /* Make sure the button is clickable */
    box-shadow: 0px 2px 5px rgba(0,0,0,0.3); /* Optional shadow */
}

.smile-value-display {
    position: absolute;
    top: 80px; /* Adjust this value to position it above instructions */
    left: 50%;
    transform: translateX(-50%);
    color: red;
    font-size: 38px;
    font-weight: bold;
    z-index: 103; /* Ensure it's above the overlay and button */
}

#exit-calibration-btn.calibration-exit-button-overlay:hover {
    background-color: #45a049;
}

#calibration-content {
    display: none;
}

#calibration-progress-container {
    width: 100%;
    height: 20px;
    background-color: #eee;
    border-radius: 10px;
    overflow: hidden;
    margin-top: 20px;
}

#calibration-progress {
    height: 100%;
    background-color: #4caf50;
    width: 0%;
    transition: width 0.3s;
}

/* Responsive styles */
@media (max-width: 768px) {
    .screen {
        width: 95%;
        padding: 15px;
    }
    
    .option-buttons button {
        padding: 8px 12px;
        font-size: 14px;
    }
    
    #video-container {
        height: 250px;
    }
    
    #webcam-floating-container {
        width: 120px !important;
        height: 90px !important;
    }
    
    #webcam-preview {
        width: 120px !important;
        height: 90px !important;
    }
    
    #pause-btn {
        width: 36px;
        height: 36px;
    }
    
    #lives-count {
        font-size: 20px;
    }
    
    #heart-icon {
        width: 24px;
        height: 24px;
    }
}

/* Animation for the bird */
@keyframes flap {
    0% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
    100% { transform: translateY(0); }
}

/* Flash effect for invulnerability */
@keyframes flash {
    0% { opacity: 1; }
    50% { opacity: 0.3; }
    100% { opacity: 1; }
}

.flashing {
    animation: flash 0.5s infinite;
}

/* Score animation */
@keyframes scoreUp {
    0% { transform: scale(1); }
    50% { transform: scale(1.5); }
    100% { transform: scale(1); }
}

.score-animation {
    animation: scoreUp 0.5s ease-out;
}

/* Loading animation */
.loading {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.loading-spinner {
    width: 60px;
    height: 60px;
    border: 6px solid #f3f3f3;
    border-top: 6px solid #4CAF50;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}